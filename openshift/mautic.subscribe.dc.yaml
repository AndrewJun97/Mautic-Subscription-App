kind: Template
apiVersion: v1
objects:
  - apiVersion: image.openshift.io/v1
    kind: ImageStream
    metadata:
      creationTimestamp: null
      name: ${NAME}
      labels:
        app: ${NAME}
        name: ${NAME}-${IMAGE_TAG}
    spec:
      lookupPolicy:
        local: false
    status: {}
  - apiVersion: v1
    data:
      form.json: |+
        {
          "subscribeFormName": "${SUBSCRIBE_FORM}",
          "unsubscribeFormName": "${UNSUBSCRIBE_FORM}",
          "subscribeActionURL": "${SUBSCRIBE_URL}",
          "unsubscribeActionURL": "${UNSUBSCRIBE_URL}"
        }
      sso.json: |-
        {
          "url": "${KEYCLOAK_URL}/auth",
          "realm": "${SSO_REALM}",
          "clientId": "${SSO_CLIENT_ID}"
        }
    kind: ConfigMap
    metadata:
      creationTimestamp: null
      name: mautic-config
      namespace: ${TARGET_NAMESPACE}
      app: ${NAME}
      labels:
        app: ${NAME}
        name: ${NAME}-${IMAGE_TAG}
  - apiVersion: v1
    data:
      Caddyfile: |
          # Where caddy should listen
          :2015

          # Turn on the Web/file server
          file_server

          # The site root
          root * /opt/app-root/src

          # Because we should
          encode zstd gzip

          # This rewrite rule may be required to get React apps
          # to deal with trailing slashes properly.
          @filter {
          	not path_regexp ^\/0.0.0.0
          	file {
          		try_files {path} {path}/ /?url={uri}
          	}
          }
          # rewrite @try_files {http.matchers.file.relative}
          try_files {path} {path}/ index.html

          # On OCP we should log to stdout so Prometheus can
          # slurp up the logs for human consumption.
          log {
            #errors stdout
            output stdout 
            format single_field common_log
            level info
          }
        

    kind: ConfigMap
    metadata:
      creationTimestamp: null
      name: caddy-${NAME}-${IMAGE_TAG}
      labels:
        app: ${NAME}
        name: ${NAME}-${IMAGE_TAG}
  - apiVersion: apps.openshift.io/v1
    kind: DeploymentConfig
    spec:
      replicas: 1
      selector:
        deploymentconfig: ${NAME}-${IMAGE_TAG}
      strategy:
        resources: {}
      template:
        metadata:
          annotations:
            openshift.io/generated-by: OpenShiftNewApp
          creationTimestamp: null
          labels:
            deploymentconfig: ${NAME}-${IMAGE_TAG}
        spec:
          containers:
            - image: '${IMAGE_REGISTRY}/${TARGET_NAMESPACE}/${IMAGE_NAME}:${IMAGE_TAG}'
              name: ${NAME}-${IMAGE_TAG}
              ports:
                - containerPort: 2015
                  protocol: TCP
              resources: {}
              volumeMounts:
              - name: caddy-${NAME}-${IMAGE_TAG}
                mountPath: /opt/app-root/etc/Caddyfile
                readOnly: true
                subPath: Caddyfile
              - name: config-volume
                mountPath: /opt/app-root/src/config
          volumes:
          - name: caddy-${NAME}-${IMAGE_TAG}
            configMap:
              defaultMode: 420
              name: caddy-${NAME}-${IMAGE_TAG}
          - name: config-volume
            configMap:
              name: mautic-config
      test: false
      triggers: 
        - type: ConfigChange
    metadata:
      annotations:
        openshift.io/generated-by: OpenShiftNewApp
      labels:
        app: ${NAME}
        name: ${NAME}-${IMAGE_TAG}
      name: ${NAME}-${IMAGE_TAG}
  - apiVersion: v1
    kind: Service
    spec:
      ports:
        - name: 2015-tcp
          port: 2015
          protocol: TCP
          targetPort: 2015
      selector:
        deploymentconfig: ${NAME}-${IMAGE_TAG}
    metadata:
      annotations:
        openshift.io/generated-by: OpenShiftNewApp
      labels:
        app: ${NAME}
        name: ${NAME}-${IMAGE_TAG}
      name: ${NAME}-${IMAGE_TAG}
  - apiVersion: route.openshift.io/v1
    kind: Route
    metadata:
      creationTimestamp: null
      labels:
        app: ${NAME}
        name: ${NAME}-${IMAGE_TAG}
      name: ${NAME}-${IMAGE_TAG}
    spec:
      host: ""
      port:
        targetPort: 2015-tcp
      to:
        kind: ""
        name: ${NAME}-${IMAGE_TAG}
        weight: null
      tls:
        termination: Edge
    status:
      ingress: null
parameters:
- description: A name used for all objects
  displayName: Name
  name: NAME
  required: true
- description: A name used for all objects
  displayName: IMAGE_NAME
  name: IMAGE_NAME
  required: true
- description: A name used for all objects
  displayName: IMAGE_REGISTRY
  name: IMAGE_REGISTRY
  required: true
  value: image-registry.openshift-image-registry.svc:5000
- description: A name used for all objects
  displayName: IMAGE_TAG
  name: IMAGE_TAG
  required: true
- description: A name used for all objects
  displayName: TARGET_NAMESPACE
  name: TARGET_NAMESPACE
  required: true
- description: Subscribe form name
  displayName: SUBSCRIBE_FORM
  name: SUBSCRIBE_FORM
  required: true
- description: Unubscribe form name
  displayName: UNSUBSCRIBE_FORM
  name: UNSUBSCRIBE_FORM
  required: true
- description: Subscribe Action URL
  displayName: SUBSCRIBE_URL
  name: SUBSCRIBE_URL
  required: true
- description: Unubscribe Action URL
  displayName: UNSUBSCRIBE_URL
  name: UNSUBSCRIBE_URL
  required: true
- description: Keycloak URL
  displayName: KEYCLOAK_URL
  name: KEYCLOAK_URL
  required: true
- description: SSO REALM
  displayName: SSO_REALM
  name: SSO_REALM
  required: true 
- description: SSO CLIENT_ID
  displayName: SSO_CLIENT_ID
  name: SSO_CLIENT_ID
  required: true 

